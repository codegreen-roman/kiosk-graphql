image: boracompany/bitbucket-pipelines-node14-baseimage:latest
pipelines:
  branches:
    master:
      - step:
          size: 2x # double BitBucket resources applied
          services:
            - docker
          caches:
            - docker
          script:
            - export GCP_IMAGE_NAME=eu.gcr.io/bora-systems/sales-next
            - CURRENT_VERSION=`cat package.json | jq .version | tr -d '"'`
            - VERSION=${CURRENT_VERSION}.${BITBUCKET_BUILD_NUMBER}
            - export GRAPHQL_API_BASE=graphql.production.veeteed.com
            - sed -i -e "s/^ENV VERSION=.*/ENV VERSION=${VERSION}/" ./Dockerfile
            - docker build --build-arg GRAPHQL_API_BASE=${GRAPHQL_API_BASE} -t ${GCP_IMAGE_NAME}:latest -t ${GCP_IMAGE_NAME}:${VERSION} .
            - echo ${GOOGLE_REGISTRY_SA}
            - mkdir ~/.gcloud/; echo ${GOOGLE_REGISTRY_SA} | base64 --decode > ~/.gcloud/gcr-sa.json
            - gcloud auth activate-service-account --quiet --key-file ~/.gcloud/gcr-sa.json
            - gcloud auth configure-docker --quiet
            - docker push ${GCP_IMAGE_NAME}:latest
            - docker push ${GCP_IMAGE_NAME}:${VERSION}
    develop:
      - parallel:
          - step:
              name: Test and Lint
              script:
                - npm install
                - npm run test-all
          - step:
              size: 2x # double BitBucket resources applied
              services:
                - docker
              name: Build and Deploy
#              trigger: manual
              caches:
                - docker
                - node
              script:
                - export GCP_IMAGE_NAME=eu.gcr.io/bora-systems/sales-next
                - CURRENT_VERSION=`cat package.json | jq .version | tr -d '"'`
                - VERSION=${CURRENT_VERSION}.${BITBUCKET_BUILD_NUMBER}
                - export GRAPHQL_API_BASE=graphql.kihnu.bora.run
                - sed -i -e "s/^ENV VERSION=.*/ENV VERSION=${VERSION}/" ./Dockerfile
                - docker build --build-arg GRAPHQL_API_BASE=${GRAPHQL_API_BASE} --build-arg VERSION=${VERSION} -t ${GCP_IMAGE_NAME}:latest -t ${GCP_IMAGE_NAME}:${VERSION} .
                - echo ${GOOGLE_REGISTRY_SA}
                - mkdir ~/.gcloud/; echo ${GOOGLE_REGISTRY_SA} | base64 --decode > ~/.gcloud/gcr-sa.json
                - gcloud auth activate-service-account --quiet --key-file ~/.gcloud/gcr-sa.json
                - gcloud auth configure-docker --quiet
                - docker push ${GCP_IMAGE_NAME}:latest
                - docker push ${GCP_IMAGE_NAME}:${VERSION}
                # Deploy to GKE
                - gcloud container clusters get-credentials kihnu --zone europe-north1-b --project bora-systems
                - kubectl set image deployment/kiosk kiosk=${GCP_IMAGE_NAME}:${VERSION} -n kihnu
    feature/*:
      - step:
          services:
            - docker
          caches:
            - docker
          script:
            - yarn install --frozen-lockfile --silent --skip-integrity-check --no-progress --non-interactive
            - yarn test-all
            - yarn build
options:
  docker: true

definitions:
  services:
    docker:
      memory: 2048
